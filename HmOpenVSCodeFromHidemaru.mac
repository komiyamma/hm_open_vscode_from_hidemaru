/*
 * HmOpenVSCodeFromHidemaru v 1.1.0.5
 * Copyright (C) 2021-2024 Akitsugu Komiyama
 * under the MIT License
 */ 

// もしも「Visual Studio Codeが発見できない」というエラーが出た場合には、Visual Studio Codeの「code.cmd」ファイルへのフルパスを「$VSCODE_ABSOLUTE_PATH」へと代入しておくこと。
$VSCODE_ABSOLUTE_PATH = @"";

$launch_mode = getarg(0);

#HMNET = loaddll( hidemarudir + @"\hm.NET.dll" );

if ( !#HMNET ) {
    message "hm.NET.dllが読み込めない";
    endmacro;
}

#dll_result = dllfuncw( #HMNET, "CallMethod", currentmacrodirectory + @"\HmOpenVSCodeFromHidemaru.dll", "HmOpenVSCodeFromHidemaru.HmOpenVSCodeFromHidemaru", "try_parse_git_dir");

// 「$GIT_DIRECTORY」にはファイルがリポジトリに属している場合に、リポジトリのディレクトリが渡ってくる。
// リポジトリに属していない場合には、空白が返ってくる。
// リポジトリに帰属していないようであれば、このファイルがあるディレクトリをオープン対象とする。

if ($GIT_DIRECTORY == "") {
    // リポジトリに所属していないのであれば、vscodeをリポジトリで開く指定自体を取り消す。
    if ($launch_mode == "scm") { $launch_mode = ""; }
    $GIT_DIRECTORY = directory2;
}

// ユーザーにより、$VSCODE_ABSOLUTE_PATH が指定されていない場合、Visual Studio Code がインストールされているディレクトリを探す。
if ($VSCODE_ABSOLUTE_PATH == "") {
    // まず普通にインストールしていれば、レジストリに登録されている
    openreg "CLASSESROOT", @"Applications\Code.exe\shell\open";
    // フォルダは掘られてる
    if (result != 0) {
        $VSCODE_ABSOLUTE_PATH = getregstr("Icon");
        $VSCODE_ABSOLUTE_PATH = strreplace($VSCODE_ABSOLUTE_PATH, "\"", "");
        // 実際にはそこにはファイルが無いなら、取り消し
        if (!existfile($VSCODE_ABSOLUTE_PATH)) {
            $VSCODE_ABSOLUTE_PATH = "";
        }
    }
    closereg;
}
if ($VSCODE_ABSOLUTE_PATH == "") {
    // まず普通にインストールしていれば、レジストリに登録されている
    openreg "CURRENTUSER", @"SOFTWARE\Classes\Applications\Code.exe\shell\open";
    // フォルダは掘られてる
    if (result != 0) {
        $VSCODE_ABSOLUTE_PATH = getregstr("Icon");
        $VSCODE_ABSOLUTE_PATH = strreplace($VSCODE_ABSOLUTE_PATH, "\"", "");
        // 実際にはそこにはファイルが無いなら、取り消し
        if (!existfile($VSCODE_ABSOLUTE_PATH)) {
            $VSCODE_ABSOLUTE_PATH = "";
        }
    }
    closereg;
}
if ($VSCODE_ABSOLUTE_PATH == "") {
    // Whereで見つかるようなら手動でパスを通しているのだろう。
    runex "where code.cmd" ,1,0,"",0,"",0,"",0,"",2,0,0,0; 
    // 発見したようだ。
    if (getresultex(9) == 0) {
        $VSCODE_ABSOLUTE_PATH = "code.cmd";
    }
}
if ($VSCODE_ABSOLUTE_PATH == "") {
    // Whereで見つかるようなら手動でパスを通しているのだろう。
    runex "where code.exe" ,1,0,"",0,"",0,"",0,"",2,0,0,0; 
    // 発見したようだ。
    if (getresultex(9) == 0) {
        $VSCODE_ABSOLUTE_PATH = "code.exe";
    }
}

// レジストリやパスで探索したが、ついにVisual Studio Codeが発見できなかった。
if ($VSCODE_ABSOLUTE_PATH == "") {
    $ERROR_MSG = "Visual Studio Codeが発見できませんでした。\nマクロ「HmOpenVSCodeFromHidemaru.mac」を編集し、変数「$VSCODE_ABSOLUTE_PATH」にVisual Studio Codeのパスを設定してください。\n" + $ERROR_MSG;
    message ($ERROR_MSG);
    endmacro;
}

// 秀丸内で映っている画面の最初の行は、lineno換算（エディタ的）では何行目？
#SCREEN_TOP_LINENO = ytolineno( 0, screentopy );
#LINENO_UNICODE = lineno;
#COLUMN_UNICODE = column_wcs;

// カーソルが画面からはみ出ているか？ （正確な判定をするにはあまりに迂遠なので、簡易判定）
if ( #LINENO_UNICODE < #SCREEN_TOP_LINENO || #SCREEN_TOP_LINENO + windowheight < #LINENO_UNICODE ) {
    // 画面外のカーソルの位置に移動するのは今ひとつなので、今秀丸で見てる場所に近しい画面になるように、当たりをつける。
    // 「13」は完全にマニュアルなマジックナンバーであるが、概ね今秀丸で見ているトップの行の「13行くらい下の行」を開くように Visual Studio Code に伝えると、そこを画面中央に配置しようとするのでいい感じになる。
    #LINENO_UNICODE = #SCREEN_TOP_LINENO + 13;
    #COLUMN_UNICODE = 0;
}

// エラーというよりは警告レベルなので、アウトプット枠への表示
if ($ERROR_MSG != "") {
    #OUTPUT = loaddll("HmOutputPane.dll");
    #ret=dllfunc(#OUTPUT, "Output",hidemaruhandle(0), $ERROR_MSG + "\n");
    endmacro;
}

// VSCodeにディレクトリを伝える際に、なぜかルートディレクトリだと、
// 例えば、R:\ではなく"R:\\" という形であることが望まれる
if (strstr($GIT_DIRECTORY, "\\") == strlen($GIT_DIRECTORY)-1) {
    $GIT_DIRECTORY = $GIT_DIRECTORY + "\\";
}

if ($launch_mode=="scm") {
    // 対象のディレクトリを作業場として、対象のファイルをunicodeベース換算でのlinenoとcolumn
    $command = sprintf(@"""%s"" -n -g ""%s"" ""%s:%d:%d"" --extensionDevelopmentPath=""%s"" ", $VSCODE_ABSOLUTE_PATH, $GIT_DIRECTORY, filename2, #LINENO_UNICODE, #COLUMN_UNICODE+1, currentmacrodirectory + "\\vscode_extension");

} else {
    // 対象のディレクトリを作業場として、対象のファイルをunicodeベース換算でのlinenoとcolumn
    $command = sprintf(@"""%s"" -n -g ""%s"" ""%s:%d:%d"" ", $VSCODE_ABSOLUTE_PATH, $GIT_DIRECTORY, filename2, #LINENO_UNICODE, #COLUMN_UNICODE+1); 

}

runex $command
    , 0     //sync   0:async, 1:sync
    , 0, "" //stdin  0:none, 1:auto, 2:<file, 3:(reserved),
            //       4:current content, 5:selection
    , 0, "" //stdout 0:none, 1:auto, 2:>file 3:>>file, 4:new window,
            //       5:insert, 6:replace, 7:>output pane, 8:>>output pane
    , 0, "" //stderr 0:none, 1:auto or >>stdout, 2-8:same as stdout's param
    , 0, "" //folder 0:none, 1:current, 2:specify 3:(reserved), 4:exe's
    , 1     //show   0:auto, 1:show, 2:hide, 3-13:ShellExecute()'s SW_*
    , 0     //draw   0:draw, 1:no draw when stdout redirected
    , 0     //encode 0:ansi, 2:utf-16, 6:utf-8
    , 0     //extended flags
; 
